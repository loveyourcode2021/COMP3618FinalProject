// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SamuraiBattle.Data;

namespace SamuraiBattle.Data.Migrations
{
    [DbContext(typeof(SamuraiBattleContext))]
    [Migration("20210331074504_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.13")
                .HasAnnotation("Relational:Collation", "Latin1_General_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SamuraiBattle.Domain.Battle", b =>
                {
                    b.Property<int>("BattleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("BattleID")
                        .HasColumnType("int")
                        .HasComment("Primary key for Customer records.")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BattleID1")
                        .HasColumnType("int");

                    b.Property<DateTime>("FightDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())")
                        .HasComment("Date");

                    b.Property<string>("Location")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Town")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Name")
                        .HasMaxLength(255);

                    b.HasKey("BattleID");

                    b.HasIndex("BattleID1");

                    b.ToTable("Battle","SamuraiBattle");

                    b.HasComment("Battle information.");
                });

            modelBuilder.Entity("SamuraiBattle.Domain.Samurai", b =>
                {
                    b.Property<int>("SamuraiID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SamuraiID")
                        .HasColumnType("int")
                        .HasComment("Primary key for Customer records.")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnName("Age")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Name")
                        .HasMaxLength(255);

                    b.Property<string>("Picture")
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Picture")
                        .HasMaxLength(255);

                    b.Property<int?>("SamuraiID1")
                        .HasColumnType("int");

                    b.Property<string>("Town")
                        .HasColumnName("Town")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("SamuraiID");

                    b.HasIndex("SamuraiID1");

                    b.ToTable("Samurai","SamuraiBattle");

                    b.HasComment("Samurai information.");
                });

            modelBuilder.Entity("SamuraiBattle.Domain.Battle", b =>
                {
                    b.HasOne("SamuraiBattle.Domain.Battle", null)
                        .WithMany("Battles")
                        .HasForeignKey("BattleID1");
                });

            modelBuilder.Entity("SamuraiBattle.Domain.Samurai", b =>
                {
                    b.HasOne("SamuraiBattle.Domain.Samurai", null)
                        .WithMany("Samurais")
                        .HasForeignKey("SamuraiID1");
                });
#pragma warning restore 612, 618
        }
    }
}
